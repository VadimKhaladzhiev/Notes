Singleton

Неленивый Singleton в Java

	Static field
	
		public class Singleton {
			public static final Singleton INSTANCE = new Singleton();
		}
	
	Enum Singleton
	
		public enum Singleton {
			INSTANCE;
		}
		
Ленивый Singleton в Java

	1 Synchronized Accessor
	
		public class Singleton {
			private static Singleton instance;
			
			public static synchronized Singleton getInstance() {
				if (instance == null) {
					instance = new Singleton();
				}
				return instance;
			}
		}
		
	2 Double Checked Locking & volatile
	
		public class Singleton {
				private static volatile Singleton instance;
			
				public static Singleton getInstance() {
				Singleton localInstance = instance;
				if (localInstance == null) {
					synchronized (Singleton.class) {
						localInstance = instance;
						if (localInstance == null) {
							instance = localInstance = new Singleton();
						}
					}
				}
				return localInstance;
			}
		}	
		
	3 On Demand Holder idiom

		public class Singleton {
				
			public static class SingletonHolder {
				public static final Singleton HOLDER_INSTANCE = new Singleton();
			}
				
			public static Singleton getInstance() {
				return SingletonHolder.HOLDER_INSTANCE;
			}
		}	