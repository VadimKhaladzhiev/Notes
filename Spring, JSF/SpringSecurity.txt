SecurityContextHolder
	хранит SecurityContext
SecurityContext
	хранит Authentication 
Authentication 
	представляет пользователя (Principal) с точки зрения Spring Security
GrantedAuthority - роли
	такие как ROLE_ANONYMOUS, ROLE_USER, ROLE_ADMIN
UserDetails
	имя, пароль, флаги(isAccountNonExpired, isAccountNonLocked, isCredentialsNonExpired, isEnabled), роли
UserDetailsService
	поиск записи пользователя (UserDetails) по логину реализуя
	UserDetails loadUserByUsername(String username) throws UsernameNotFoundException; 
	
	
Логин и пароль объединяются в
	UsernamePasswordAuthenticationToken	 (реализует Authentication)
и передается в 
	AuthenticationManager.authenticate(Authentication authentication) для проверки
после проверки лиюбо выкидывается исключение BadCredentialsException либо возвращается
	Authentication
Для пользователя устанавливается контекст безопасности путем вызова метода 
	SecurityContextHolder.getContext().setAuthentication(…)
	
	
В web.xml добавляется фильтр 
	org.springframework.web.filter.DelegatingFilterProxy

в security.xml
<http access-denied-page="/error403.jsp"> 
   <intercept-url pattern="/index*" access="ROLE_USER,ROLE_ANONYMOUS"/> 
   <intercept-url pattern="/add*" access="ROLE_USER"/> 
   <intercept-url pattern="/delete/*" access="ROLE_ADMIN"/> 
   <form-login login-page="/login.jsp" default-target-url="/index" authentication-failure-url="/login.jsp?error=true"/> 
   <logout logout-url="/logout" logout-success-url="/index"/> 
   <anonymous username="guest" granted-authority="ROLE_ANONYMOUS"/> 
   <remember-me/> 
</http> 

<authentication-manager>
	<authentication-provider>
 	   <jdbc-user-service data-source-ref="dataSource" 
     	                        users-by-username-query="select username, password, enabled 
      	                                           from users where username = ?"
      				authorities-by-username-query="select u.username, au.authority 
      	                                                 from users u, authorities au  
       	                                                where u.id = au.user_id and u.username = ?" />
	</authentication-provider>
</authentication-manager>

В login.jsp есть форма с 
	action="/j_spring_security_check" и 
	input'ы для имени и пароля с name="j_username" и name="j_password"
	

-----------------------------
https://habrahabr.ru/post/203318/	
http://stackoverflow.com/questions/25383286/spring-security-custom-userdetailsservice-and-custom-user-class

Пример OAuth2
http://websystique.com/spring-security/secure-spring-rest-api-using-oauth2/
